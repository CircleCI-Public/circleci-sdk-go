/*
 * CircleCI API
 *
 * This describes the resources that make up the CircleCI API v2.
 *
 * API version: v2
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package circleci

// VCS information for the pipeline.
type PipelineListResponseVcs struct {
	// Name of the VCS provider (e.g. GitHub, Bitbucket).
	ProviderName string `json:"provider_name"`
	// URL for the repository the trigger targets (i.e. the repository where the PR will be merged). For fork-PR pipelines, this is the URL to the parent repo. For other pipelines, the `origin_` and `target_repository_url`s will be the same.
	TargetRepositoryUrl string `json:"target_repository_url"`
	// The branch where the pipeline ran. The HEAD commit on this branch was used for the pipeline. Note that `branch` and `tag` are mutually exclusive. To trigger a pipeline for a PR by number use `pull/<number>/head` for the PR ref or `pull/<number>/merge` for the merge ref (GitHub only).
	Branch string `json:"branch,omitempty"`
	// The code review id.
	ReviewId string `json:"review_id,omitempty"`
	// The code review URL.
	ReviewUrl string `json:"review_url,omitempty"`
	// The code revision the pipeline ran.
	Revision string `json:"revision"`
	// The tag used by the pipeline. The commit that this tag points to was used for the pipeline. Note that `branch` and `tag` are mutually exclusive.
	Tag string `json:"tag,omitempty"`
	Commit *PipelineListResponseVcsCommit `json:"commit,omitempty"`
	// URL for the repository where the trigger originated. For fork-PR pipelines, this is the URL to the fork. For other pipelines the `origin_` and `target_repository_url`s will be the same.
	OriginRepositoryUrl string `json:"origin_repository_url"`
}
